@tailwind base;
@tailwind components;
@tailwind utilities;

@layer utilities {
  * {
    font-family: "Inter";
    /* font-family: "Montserrat"; */
  }

  /* body:has(dialog.modal[open]) {
    overflow: hidden;
  } */

  body > div {
    overflow-x: hidden;
    overflow-y: hidden;
  }

  dialog.modal::backdrop {
    background-color: rgba(0, 0, 0, 0.65);
  }

  .title {
    font-family: "Montserrat";
  }

  .hide {
    opacity: 0;
    transition: all 1.5s;
  }

  .show {
    opacity: 1;
    filter: blur(0) !important;
    transform: translate3d(0, 0, 0) !important;
  }

  .slide-in {
    filter: blur(5px);
    transform: translate3d(-60%, 0, 0);
  }

   .slide-in-right {
    filter: blur(5px);
    transform: translate3d(60%, 0, 0);
  }

   .scale-up {
    /* filter: blur(5px); */
    transform: scale(0.85);
  }

  .timeline-item:nth-child(1) {
    transition-delay: 500ms;
  }
  .timeline-item:nth-child(2) {
    transition-delay: 300ms;
  }

  .social:nth-child(1) {
    transition-delay: 300ms;
  }
  .social:nth-child(2) {
    transition-delay: 500ms;
  }
  .social:nth-child(3) {
    transition-delay: 700ms;
  }
  .social:nth-child(4) {
    /*leetcode icon*/
    transition-delay: 900ms;
    height: 42px;
    width: 42px;
  }

  body::-webkit-scrollbar,
  body dialog::-webkit-scrollbar {
    width: 0.8em;
  }

  body.dark::-webkit-scrollbar-track,
  body.dark dialog::-webkit-scrollbar-track {
    background-color: rgb(28 25 23);
  }

  body::-webkit-scrollbar-thumb,
  body dialog::-webkit-scrollbar-thumb {
    background-color: rgb(63, 63, 63);
    border-radius: 5px;
  }

  .icon {
    height: 4rem;
    transition: all 0.3s ease-in-out;
  }

  .icon:hover {
    transform: scale(1.3);
  }

  .portfolio-item-wrapper {
    transition: all 0.3s ease-in-out;
  }
  .portfolio-item-wrapper:hover {
    transform: scale(1.03);
  }

  .scroll-down-ul {
    display: inline;
  }
  .imgm1 {
    opacity: 80%;
  }
  .imgm2 {
    animation: opacity1 2s linear infinite;
  }
  .imgm3 {
    animation: opacity2 2s linear infinite;
  }

  .shake {
    animation: shake 0.5s ease-in-out;
  }

  .delay-0 {
    transition-delay: 100ms;
  }
  .delay-1 {
    transition-delay: 200ms;
  }
  .delay-2 {
    transition-delay: 300ms;
  }
  .delay-3 {
    transition-delay: 400ms;
  }
  .delay-4 {
    transition-delay: 500ms;
  }
  .delay-5 {
    transition-delay: 600ms;
  }


  .glow-effect {
    position: relative;
    z-index: 0;
  }

  @media (hover: hover) {
    body.dark .glow-effect:before {
      background: radial-gradient(
        600px circle at var(--x) var(--y),
        rgb(139, 92, 246, 0.15),
        transparent 30%
      );
      z-index: -1;
    }
  
    body.light .glow-effect:before {
      background: radial-gradient(
        600px circle at var(--x) var(--y),
        rgb(253, 186, 116, 0.25),
        transparent 30%
      );
      z-index: -1;
    }
  }
  
  .glow-active:before {
    opacity: 1 !important;
  }


  .modal[open] {
    opacity: 1;
    transform: scale(1);
  }

  .modal-opening {
    animation: modalOpen 0.3s ease-out forwards;
  }

  .modal-closing {
    animation: modalClose 0.3s ease-out forwards;
  }

  .modal::backdrop {
    background: rgba(0, 0, 0, 0.5);
    opacity: 0;
    transition: opacity 0.3s ease-out;
  }

  .modal[open]::backdrop {
    opacity: 1;
  }

  @keyframes modalOpen {
    from {
      transform: scale(0.9);
      opacity: 0;
    }
    to {
      transform: scale(1);
      opacity: 1;
    }
  }

  @keyframes modalClose {
    from {
      transform: scale(1);
      opacity: 1;
    }
    to {
      transform: scale(0.9);
      opacity: 0;
    }
  }

  @keyframes opacity1 {
    0% {
      opacity: 0;
    }
    50% {
      opacity: 70%;
    }
    100% {
      opacity: 0;
    }
  }

  @keyframes opacity2 {
    0% {
      opacity: 0;
    }
    50% {
      opacity: 50%;
    }
    100% {
      opacity: 0;
    }
  }

  @media (prefers-reduced-motion) {
    .hide {
      transition: none;
    }
  }

  @keyframes shake {
    10%,
    90% {
      transform: translate3d(-0.5px, 0, 0) rotate(0.5deg);
    }

    20%,
    80% {
      transform: translate3d(1px, 0, 0) rotate(-1deg);
    }

    30%,
    50%,
    70% {
      transform: translate3d(-2px, 0, 0) rotate(0.5deg);
    }

    40%,
    60% {
      transform: translate3d(2px, 0, 0) rotate(-0.5deg);
    }
  }
}
